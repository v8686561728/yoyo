// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering Should have unequal id 1`] = `
<Fragment>
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Name"
    inputType="text"
    inputValue=""
    name="NAME"
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Points"
    inputType="text"
    inputValue=""
    name="POINTS"
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Category"
    inputType="text"
    inputValue=""
    name="CATEGORY"
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Retailer"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Expiry Date"
    inputType="date"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Count"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Image"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Vendor"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Short Description"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Long Description"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <div
    style={
      Object {
        "marginBottom": "100px",
        "marginTop": "10px",
      }
    }
  >
    <WithStyles(ForwardRef(Button))
      onClick={[Function]}
      style={
        Object {
          "marginLeft": "20px",
        }
      }
      variant="contained"
    >
      CLEAR
    </WithStyles(ForwardRef(Button))>
    <WithStyles(ForwardRef(Button))
      color="primary"
      onClick={[Function]}
      style={
        Object {
          "marginLeft": "10px",
        }
      }
      variant="contained"
    >
      ADD
    </WithStyles(ForwardRef(Button))>
  </div>
  <div />
</Fragment>
`;

exports[`rendering Should render AddUpdateForm component 1`] = `
<Fragment>
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Name"
    inputType="text"
    inputValue=""
    name="NAME"
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Points"
    inputType="text"
    inputValue=""
    name="POINTS"
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Category"
    inputType="text"
    inputValue=""
    name="CATEGORY"
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Retailer"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Expiry Date"
    inputType="date"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Count"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Image"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Card Vendor"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Short Description"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <InputTypeComponent
    endAdornment={false}
    handleInputChange={[Function]}
    inputError={false}
    inputHelperText=""
    inputPlaceholder="Long Description"
    inputType="text"
    inputValue=""
    styles={
      Object {
        "marginBottom": "1rem",
        "marginLeft": "1rem",
        "marginTop": "1rem",
        "width": "45%",
      }
    }
  />
  <div
    style={
      Object {
        "marginBottom": "100px",
        "marginTop": "10px",
      }
    }
  >
    <WithStyles(ForwardRef(Button))
      onClick={[Function]}
      style={
        Object {
          "marginLeft": "20px",
        }
      }
      variant="contained"
    >
      CLEAR
    </WithStyles(ForwardRef(Button))>
    <WithStyles(ForwardRef(Button))
      color="primary"
      onClick={[Function]}
      style={
        Object {
          "marginLeft": "10px",
        }
      }
      variant="contained"
    >
      ADD
    </WithStyles(ForwardRef(Button))>
  </div>
  <div />
</Fragment>
`;
